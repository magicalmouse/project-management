# version: '3.8' # Removed as it's obsolete in newer Docker Compose

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: project-management-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - project-management-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: project-management-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: database
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: 3306
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      PORT: 4000
      CORS_ORIGIN: ${FRONTEND_URL}
    ports:
      - "4000:4000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - project-management-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        VITE_API_URL: ${VITE_API_URL}
    container_name: project-management-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - project-management-network

volumes:
  mysql_data:
    driver: local

networks:
  project-management-network:
    driver: bridge
